# -*- coding: utf-8 -*-
"""Untitled25.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pGvyEM57gimqblK0YpBH2lmnegUj50LA
"""

import tensorflow as tf
import os
import numpy as np
import cv2
from tensorflow.keras.applications import VGG16
import zipfile
from tensorflow.keras.preprocessing.image import ImageDataGenerator

!wget --no-check-certificate \
    https://storage.googleapis.com/mledu-datasets/cats_and_dogs_filtered.zip \
    -O /tmp/cats_and_dogs_filtered.zip

local_zip = '/tmp/cats_and_dogs_filtered.zip'
zip_ref = zipfile.ZipFile(local_zip, 'r')
zip_ref.extractall('/tmp')
zip_ref.close()

model=VGG16(weights='imagenet',include_top=False,input_shape=(300,300,3))
x=model.output
x=tf.keras.layers.Flatten()(x)
x=tf.keras.layers.Dense(1024,activation='relu')(x)
x = tf.keras.layers.Dropout(0.5)(x)
x = tf.keras.layers.Dense(1024, activation="relu")(x)
predictions = tf.keras.layers.Dense(1, activation="sigmoid")(x)
final_model=tf.keras.models.Model(model.input,predictions)
final_model.compile(loss='binary_crossentropy',optimizer='Adam',metrics=['acc'])
final_model.summary()

train_datagen=ImageDataGenerator(rescale=1/255)
test_datagen=ImageDataGenerator(rescale=1/255)
train_generator=train_datagen.flow_from_directory('/tmp/cats_and_dogs_filtered/train',target_size=(300,300),batch_size=32,class_mode='binary')
valid_generator=test_datagen.flow_from_directory('/tmp/cats_and_dogs_filtered/validation',target_size=(300,300),batch_size=32,class_mode='binary')

history = final_model.fit_generator(
      train_generator,
      steps_per_epoch=100,  # 2000 images = batch_size * steps
      epochs=15,
      validation_data=valid_generator,
      validation_steps=50,  # 1000 images = batch_size * steps
      verbose=2)